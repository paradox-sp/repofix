name: EthSign to SideStore Converter

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  convert-repo:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests jsonschema

      - name: Fetch and convert repo
        run: |
          python <<EOF
          import requests
          import json
          from datetime import datetime
          from collections import defaultdict

          # Configuration
          SOURCE_URL = "https://repo.ethsign.fyi/"
          MAX_APPS = 50  # Safety limit
          DEFAULT_ICON = "https://paradoxtime.tk/img/pdt_logo_nobg_shadow.png"

          # Fetch source data
          try:
              response = requests.get(SOURCE_URL, timeout=15)
              response.raise_for_status()
              src_data = response.json()
          except Exception as e:
              print(f"ðŸš¨ Error fetching source: {e}")
              exit(1)

          # Process apps
          output = {
              "name": "EthSign (SideStore)",
              "identifier": "ethsign.sidestore",
              "iconURL": DEFAULT_ICON,
              "website": "https://repo.ethsign.fyi",
              "apps": []
          }

          seen_bundles = set()
          for app in src_data.get("apps", [])[:MAX_APPS]:
              # Skip invalid or duplicate apps
              if not all(k in app for k in ["name", "bundleIdentifier", "version", "downloadURL"]):
                  continue
              if app["bundleIdentifier"] in seen_bundles:
                  continue
              seen_bundles.add(app["bundleIdentifier"])

              # Validate icon URL
              icon_url = app.get("iconURL", "")
              if not icon_url.startswith(('http://', 'https://')):
                  icon_url = DEFAULT_ICON

              # Build version entry
              version_entry = {
                  "version": app["version"],
                  "date": app.get("versionDate", datetime.now().strftime("%Y-%m-%d")),
                  "downloadURL": app["downloadURL"],
                  "size": app.get("size", 10000000),  # Default 10MB
                  "localizedDescription": app.get("localizedDescription", "No description available")
              }

              # Build app entry
              output["apps"].append({
                  "name": app["name"],
                  "bundleIdentifier": app["bundleIdentifier"],
                  "developerName": app.get("developerName", "Unknown"),
                  "iconURL": icon_url,
                  "versions": [version_entry]  # Single-version for stability
              })

          # Save output
          with open("ethsign-sidestore.json", "w") as f:
              json.dump(output, f, indent=2)
          print(f"âœ… Generated repo with {len(output['apps'])} apps")  # FIXED: Added missing parenthesis
          EOF

      - name: Validate JSON
        run: |
          pip install jsonschema
          python -c "
          import json, jsonschema
          schema = {
            'type': 'object',
            'required': ['name', 'identifier', 'apps'],
            'properties': {
              'apps': {
                'type': 'array',
                'items': {
                  'required': ['name', 'bundleIdentifier', 'versions'],
                  'properties': {
                    'versions': {
                      'type': 'array',
                      'items': {
                        'required': ['version', 'downloadURL']
                      }
                    }
                  }
                }
              }
            }
          }
          with open('ethsign-sidestore.json') as f:
            jsonschema.validate(json.load(f), schema)
          print('âœ… JSON validation passed')
          "

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ethsign-sidestore.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update: $(date +'%Y-%m-%d %H:%M')"
          git push
