name: EthSign to AltStore Converter

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  convert-repo:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Convert to AltStore format
        run: |
          python <<EOF
          import requests
          import json
          from datetime import datetime

          # Configuration
          SOURCE_URL = "https://repo.ethsign.fyi/"
          DEFAULT_ICON = "https://paradoxtime.tk/img/pdt_logo_nobg_shadow.png"
          DEFAULT_TINT = "#FF6B6B"
          REPO_IDENTIFIER = "ethsign.altstore"  # Added identifier

          # Fetch source
          print("üîÑ Fetching EthSign repo...")
          try:
              response = requests.get(SOURCE_URL, timeout=15)
              response.raise_for_status()
              src_data = response.json()
          except Exception as e:
              print(f"‚ùå Error fetching source: {e}")
              exit(1)

          # Transform to AltStore format
          output = {
              "name": "EthSign Apps",
              "identifier": REPO_IDENTIFIER,  # Added required identifier
              "subtitle": "Apps from EthSign repository",
              "description": "Collection of modified apps from EthSign",
              "iconURL": DEFAULT_ICON,
              "website": "https://repo.ethsign.fyi",
              "tintColor": DEFAULT_TINT,
              "featuredApps": [],
              "apps": [],
              "news": []
          }

          # Process apps
          for app in src_data.get("apps", []):
              if not all(k in app for k in ["name", "bundleIdentifier", "version", "downloadURL"]):
                  continue

              output["apps"].append({
                  "name": app["name"],
                  "bundleIdentifier": app["bundleIdentifier"],
                  "developerName": app.get("developerName", "Unknown Developer"),
                  "subtitle": app.get("subtitle", "Modified app"),
                  "localizedDescription": app.get("localizedDescription", "Modified app from EthSign repository"),
                  "iconURL": app.get("iconURL", DEFAULT_ICON),
                  "tintColor": DEFAULT_TINT,
                  "category": "other",
                  "versions": [{
                      "version": app["version"],
                      "date": app.get("versionDate", datetime.now().strftime("%Y-%m-%d")),
                      "downloadURL": app["downloadURL"],
                      "size": app.get("size", 10000000),
                      "localizedDescription": app.get("localizedDescription", "Modified app from EthSign")
                  }],
                  "appPermissions": {
                      "entitlements": [],
                      "privacy": {}
                  }
              })

          with open("altstore-source.json", "w") as f:
              json.dump(output, f, indent=2)
          print(f"‚úÖ Successfully converted {len(output['apps'])} apps")
          EOF

      - name: Validate JSON
        run: |
          # Basic JSON validation
          if ! jq empty altstore-source.json; then
            echo "‚ùå Invalid JSON structure"
            exit 1
          fi
          echo "‚úÖ Valid JSON structure"

          # AltStore-specific validation
          REQUIRED_FIELDS=(
            '.name'
            '.identifier'
            '.apps[].name'
            '.apps[].bundleIdentifier'
            '.apps[].versions[].downloadURL'
            '.apps[].versions[].version'
          )
          
          for field in "${REQUIRED_FIELDS[@]}"; do
            if ! jq -e "$field" altstore-source.json >/dev/null; then
              echo "‚ùå Missing required field: $field"
              exit 1
            fi
          done
          echo "‚úÖ All required fields present"

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add altstore-source.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M')"
          git push
