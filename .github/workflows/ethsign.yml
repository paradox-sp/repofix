name: EthSign to SideStore Converter

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  convert-repo:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests jsonschema

      - name: Fetch and convert repo
        run: |
          python <<EOF
          import requests
          import json
          from datetime import datetime
          from collections import defaultdict

          SOURCE_URL = "https://repo.ethsign.fyi/"
          DEFAULT_DESCRIPTION = "No description available"
          DEFAULT_ICON = "https://paradoxtime.tk/img/pdt_logo_nobg_shadow.png"

          try:
              response = requests.get(SOURCE_URL, timeout=15)
              response.raise_for_status()
              src_data = response.json()
          except Exception as e:
              print(f"ðŸš¨ Error fetching source: {e}")
              exit(1)

          output = {
              "name": "EthSign (SideStore)",
              "identifier": "ethsign.sidestore",
              "iconURL": DEFAULT_ICON,
              "apps": []
          }

          for app in src_data.get("apps", []):
              # Skip apps missing required fields
              if not all(k in app for k in ["name", "bundleIdentifier", "version", "downloadURL"]):
                  continue

              # Ensure all version fields exist
              version_entry = {
                  "version": app["version"],
                  "date": app.get("versionDate", datetime.now().strftime("%Y-%m-%d")),
                  "downloadURL": app["downloadURL"],
                  "size": app.get("size", 10000000),
                  "localizedDescription": app.get("localizedDescription", DEFAULT_DESCRIPTION)
              }

              # Ensure all app fields exist
              app_entry = {
                  "name": app["name"],
                  "bundleIdentifier": app["bundleIdentifier"],
                  "developerName": app.get("developerName", "Unknown"),
                  "iconURL": app.get("iconURL", DEFAULT_ICON),
                  "localizedDescription": app.get("localizedDescription", DEFAULT_DESCRIPTION),
                  "versions": [version_entry]
              }

              output["apps"].append(app_entry)

          with open("ethsign-sidestore.json", "w") as f:
              json.dump(output, f, indent=2)
          print(f"âœ… Generated repo with {len(output['apps'])} apps")
          EOF

      - name: Validate JSON
        run: |
          python -c "
          import json
          with open('ethsign-sidestore.json') as f:
              data = json.load(f)
              assert all('localizedDescription' in app for app in data['apps']), 'Missing localizedDescription'
              assert all('localizedDescription' in v for app in data['apps'] for v in app['versions']), 'Missing version descriptions'
          print('âœ… All descriptions present')
          "

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ethsign-sidestore.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update: $(date +'%Y-%m-%d %H:%M')"
          git push
